# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/3b4931b3-0477-4951-a47a-115ebe59b785";

  fileSystems."/.snapshots" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/12CE-A600";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/srv" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=srv" ];
    };

  fileSystems."/tmp" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@tmp" ];
    };

  fileSystems."/var/cache" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@cache" ];
    };

  fileSystems."/var/lib/machines" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=var/lib/machines" ];
    };

  fileSystems."/var/lib/portables" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=var/lib/portables" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=@log" ];
    };

  fileSystems."/var/tmp" =
    { device = "/dev/disk/by-uuid/c4387689-f038-4771-996c-e1c336f25a1f";
      fsType = "btrfs";
      options = [ "subvol=var/tmp" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp37s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
